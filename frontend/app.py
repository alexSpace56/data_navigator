import streamlit as st
import requests
import os
import json
from datetime import datetime

API_URL = os.getenv("RAG_API_URL", "http://rag_api:8000")

st.set_page_config(page_title="Data Navigator", layout="wide")
st.title("üîç –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –î–∞–Ω–Ω—ã—Ö")
st.markdown("### –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –ò–° –û–î–°")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if "messages" not in st.session_state:
    st.session_state.messages = []
    st.session_state.messages.append({
        "role": "assistant",
        "content": "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –¥–∞–Ω–Ω—ã–º –ò–° –û–î–°. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —Ç–∞–±–ª–∏—Ü–∞—Ö, –ø–æ–ª—è—Ö –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ.",
        "timestamp": datetime.now().isoformat(),
        "id": "welcome_message"
    })

if "deleted_messages" not in st.session_state:
    st.session_state.deleted_messages = []


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–µ–π
def add_message(role, content, message_id=None):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é"""
    message = {
        "role": role,
        "content": content,
        "timestamp": datetime.now().isoformat(),
        "id": message_id or f"msg_{datetime.now().timestamp()}"
    }
    st.session_state.messages.append(message)
    return message


def delete_message(message_id):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID"""
    st.session_state.messages = [
        msg for msg in st.session_state.messages
        if msg["id"] != message_id
    ]
    st.session_state.deleted_messages.append(message_id)
    st.rerun()


def clear_chat():
    """–û—á–∏—â–∞–µ—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"""
    st.session_state.messages = [
        msg for msg in st.session_state.messages
        if msg["id"] == "welcome_message"
    ]
    st.session_state.deleted_messages = []
    st.rerun()


# –°–∞–π–¥–±–∞—Ä —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
with st.sidebar:
    st.header("‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–º")

    # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", use_container_width=True):
        clear_chat()
        st.success("–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    st.metric("–°–æ–æ–±—â–µ–Ω–∏–π", len(st.session_state.messages))
    st.metric("–£–¥–∞–ª–µ–Ω–æ", len(st.session_state.deleted_messages))

    st.divider()
    st.header("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
    st.markdown("""
    **–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –¥–∞–Ω–Ω—ã—Ö** –ø–æ–º–æ–≥–∞–µ—Ç:
    - –ù–∞—Ö–æ–¥–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –∏ –ø–æ–ª—è –≤ –ë–î
    - –ü–æ–Ω–∏–º–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É

    –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ!
    """)

    if st.button("üîÑ –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", use_container_width=True):
        with st.spinner("–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è..."):
            try:
                response = requests.post(f"{API_URL}/api/index")
                if response.status_code == 200:
                    st.success("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")
                else:
                    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
            except:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞
chat_container = st.container()

with chat_container:
    # –ü–æ–∫–∞–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è
    for message in st.session_state.messages:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message["id"] in st.session_state.deleted_messages:
            continue

        col1, col2 = st.columns([0.9, 0.1])

        with col1:
            with st.chat_message(message["role"]):
                st.markdown(message["content"])

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –µ—Å—Ç—å (–¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞)
                if message["role"] == "assistant" and "context" in message:
                    with st.expander("üìä –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"):
                        for item in message.get("context", []):
                            st.write(f"**{item.get('type', 'object')}**: {item.get('description', '')}")

        with col2:
            # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            if message["id"] != "welcome_message":
                if st.button("‚ùå", key=f"delete_{message['id']}"):
                    delete_message(message["id"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤–Ω–∏–∑—É
input_container = st.container()
with input_container:
    if prompt := st.chat_input("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –¥–∞–Ω–Ω—ã—Ö..."):
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_message = add_message("user", prompt)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        with st.spinner("ü§î –î—É–º–∞—é..."):
            try:
                response = requests.post(
                    f"{API_URL}/api/query",
                    json={"question": prompt},
                    timeout=60
                )

                if response.status_code == 200:
                    data = response.json()

                    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                    assistant_content = data["answer"]

                    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                    assistant_message = add_message("assistant", assistant_content)

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ expander
                    if "context" in data:
                        assistant_message["context"] = data["context"]

                else:
                    error_msg = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞"
                    add_message("assistant", error_msg)

            except Exception as e:
                error_msg = f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: {str(e)}"
                add_message("assistant", error_msg)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        st.rerun()

# –°—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
st.markdown("""
<style>
    .stButton button {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }
    .stChatMessage {
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }
    .stExpander {
        margin-top: 0.5rem;
    }
</style>
""", unsafe_allow_html=True)