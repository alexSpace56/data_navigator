import streamlit as st
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
RAG_API_URL = st.secrets.get("RAG_API_URL", "http://localhost:8001")

st.set_page_config(page_title="Data Navigator", page_icon="üîç", layout="wide")

st.title("üîç Data Navigator")
st.markdown("### AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ò–° –û–î–°")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if "messages" not in st.session_state:
    st.session_state.messages = []
    st.session_state.messages.append({"role": "assistant",
                                      "content": "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –¥–∞–Ω–Ω—ã–º –ò–° –û–î–°. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —Ç–∞–±–ª–∏—Ü–∞—Ö, –ø–æ–ª—è—Ö –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ."})

# –ü–æ–∫–∞–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞
if prompt := st.chat_input("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –¥–∞–Ω–Ω—ã—Ö..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
    with st.chat_message("assistant"):
        with st.spinner("–ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é..."):
            try:
                response = requests.post(
                    f"{RAG_API_URL}/api/query",
                    json={"question": prompt},
                    timeout=30
                )

                if response.status_code == 200:
                    data = response.json()

                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
                    st.markdown(data["answer"])

                    for result in data["results"]:
                        with st.expander(
                                f"**{result['type'].capitalize()}**: {result.get('table_name', '')}.{result.get('column_name', '')}"):
                            st.markdown(result['description'])

                else:
                    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")

            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: {str(e)}")

# Sidebar —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
with st.sidebar:
    st.header("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
    st.markdown("""
    **Data Navigator** –ø–æ–º–æ–≥–∞–µ—Ç:
    - –ù–∞—Ö–æ–¥–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –∏ –ø–æ–ª—è –≤ –ë–î
    - –ü–æ–Ω–∏–º–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É

    –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ!
    """)

    if st.button("üîÑ –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"):
        with st.spinner("–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è..."):
            try:
                response = requests.post(f"{RAG_API_URL}/api/index")
                if response.status_code == 200:
                    st.success("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")
                else:
                    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
            except:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")